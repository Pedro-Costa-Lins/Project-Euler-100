{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNf6SB1wEkJPFIqHvxqgvi9",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Pedro-Costa-Lins/Project-Euler-100/blob/main/Maximum%20path%20sum%20I%20%26%20II\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z6keeqMB6pFK"
      },
      "source": [
        "import numpy as np\n",
        "import urllib"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9lMMb9EH8SGa"
      },
      "source": [
        "file = urllib.request.urlopen('https://projecteuler.net/project/resources/p067_triangle.txt')\n",
        "\n",
        "TriangleStr = [i.decode('utf-8').split() for i in file]\n",
        "\n",
        "Triangle = [[int(i) for i in j] for j in TriangleStr]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qXGKiL7nU-Ee",
        "outputId": "a0ea8b3a-8f60-480d-cd5d-cca7e6aa6634"
      },
      "source": [
        "print(Triangle[:6])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[59], [73, 41], [52, 40, 9], [26, 53, 6, 34], [10, 51, 87, 86, 81], [61, 95, 66, 57, 25, 68]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "reMqsN96-PuC"
      },
      "source": [
        "def below_maximum_sum(triangle):\n",
        "  for line in reversed(range(len(triangle)-1)):\n",
        "    for item in range(len(triangle[line])):\n",
        "      if (triangle[line][item] + triangle[line+1][item]) >= (triangle[line][item] + triangle[line+1][item+1]):\n",
        "        triangle[line][item] = triangle[line][item] + triangle[line+1][item]\n",
        "      else:\n",
        "        triangle[line][item] = triangle[line][item] + triangle[line+1][item+1]\n",
        "  \n",
        "  return triangle[0][0]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1MHddA11CV0T",
        "outputId": "398cfee4-7d08-42ae-c695-43166f09a0c4"
      },
      "source": [
        "below_maximum_sum(triangle=Triangle)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7273"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    }
  ]
}