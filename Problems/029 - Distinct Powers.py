from decorators import time_it
from useful import clear_list_from_duplicates


class Problem:

    @staticmethod
    @time_it
    def solution():
        """ Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:

        2² = 4, 2³ = 8 ... 5^5 = 3125

        If they are then placed in numerical order, with any repeats removed, we get the following sequence of distinct
        terms:

        4,8,9,16,25,27,32,64,81,125,243,256,625,1024,3125.

        How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?
        """

        target = [2, 100]
        list_of_combinations = []

        for a in range(target[0], target[1]+1):
            for b in range(target[0], target[1]+1):
                list_of_combinations.append(a ** b)

        return len(clear_list_from_duplicates(list_of_combinations))


Problem.solution()  # Result: 9183
